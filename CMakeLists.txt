CMAKE_MINIMUM_REQUIRED(VERSION 3.1.0 FATAL_ERROR)

SET(PACKAGE_NAME      "ibus-unikey")

PROJECT(${PACKAGE_NAME} LANGUAGES CXX)

ADD_COMPILE_OPTIONS(-std=c++11 -Wall -Werror -pedantic -march=native -fPIC)

SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
MESSAGE(STATUS "CMake module path: ${CMAKE_MODULE_PATH}")

##################################################################
# Versioning from GIT
INCLUDE(Utilities)

FIND_PACKAGE(Git)
GetAndParseVersion()

SET(PACKAGE_STRING    "${PACKAGE_NAME} ${PACKAGE_VERSION}")
SET(PACKAGE_TARNAME   "${PACKAGE_NAME}-${PACKAGE_VERSION}")
SET(PACKAGE_BUGREPORT "https://github.com/ibus-unikey/ibus-unikey")

# ----- DEPENDENCIES ----- #
INCLUDE(GNUInstallDirs)

FIND_PACKAGE(PkgConfig)
PKG_CHECK_MODULES(IBUS REQUIRED ibus-1.0)

SET(THREADS_PREFER_PTHREAD_FLAG ON)
FIND_PACKAGE(Threads REQUIRED)
FIND_PACKAGE(GTK2 REQUIRED
    COMPONENTS
    gtk
)

FIND_PACKAGE(Gettext REQUIRED)

FIND_PACKAGE(spdlog REQUIRED)

INCLUDE_DIRECTORIES(${IBUS_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${GTK2_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${spdlog_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(BEFORE ${PROJECT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(BEFORE ${PROJECT_SOURCE_DIR}/src/third_party/libunikey)
INCLUDE_DIRECTORIES(BEFORE ${PROJECT_SOURCE_DIR}/src/unix/ibus)

SET(LIBEXECDIR          "${CMAKE_INSTALL_FULL_LIBEXECDIR}/${PACKAGE_NAME}")
SET(LOCALEDIR           "${CMAKE_INSTALL_FULL_LOCALEDIR}")
SET(PKGDATADIR          "${CMAKE_INSTALL_FULL_DATADIR}/${PACKAGE_NAME}")
SET(UI_DATA_DIR         "${PKGDATADIR}/ui")
SET(IBUS_COMPONENT_DIR  "${CMAKE_INSTALL_FULL_DATADIR}/ibus/component")

CONFIGURE_FILE(
  "${PROJECT_SOURCE_DIR}/src/unix/ibus/unikey.xml.in"
  "${CMAKE_CURRENT_BINARY_DIR}/unikey.xml"
)

MESSAGE(STATUS "CMAKE_BUILD_TYPE is ${CMAKE_BUILD_TYPE}")

# ----- SOURCES ----- #

FILE(GLOB IBUS_UNIKEY_ENGINE_SRC
  "src/unix/ibus/*.cpp"
  "src/base/*.cpp"
)


FILE(GLOB IBUS_COMPONENT_FILES
  "${CMAKE_CURRENT_BINARY_DIR}/unikey.xml"
)

FILE(GLOB IBUS_UNIKEY_ICONS_FILES
  "src/data/images/ibus-unikey.png"
)

FILE(GLOB IBUS_UNIKEY_PO_FILES
  "po/vi.po"
)

# ------ EXECUTABLES --------#

# ------ ibus-engine-unikey --------#
ADD_EXECUTABLE(ibus-engine-unikey ${IBUS_UNIKEY_ENGINE_SRC})

TARGET_LINK_LIBRARIES(ibus-engine-unikey
  libunikey
  ${IBUS_LIBRARIES}
  Threads::Threads
)

TARGET_COMPILE_OPTIONS(ibus-engine-unikey
  PUBLIC -Wno-variadic-macros
)

TARGET_COMPILE_DEFINITIONS(ibus-engine-unikey
  PUBLIC LIBEXECDIR=\"${LIBEXECDIR}\"
  PUBLIC GETTEXT_PACKAGE=\"${PACKAGE_NAME}\"
  PUBLIC PACKAGE_STRING=\"${PACKAGE_STRING}\"
  PUBLIC LOCALEDIR=\"${LOCALEDIR}\"
  PUBLIC PACKAGE_VERSION=\"${PACKAGE_VERSION}\"
  PUBLIC PACKAGE_BUGREPORT=\"${PACKAGE_BUGREPORT}\"
  PUBLIC PACKAGE_NAME=\"${PACKAGE_NAME}\"
  PUBLIC PKGDATADIR=\"${PKGDATADIR}\"
)


# ----- install -------#

INSTALL(TARGETS ibus-engine-unikey
  DESTINATION ${LIBEXECDIR})

INSTALL(FILES ${IBUS_COMPONENT_FILES}
  DESTINATION ${IBUS_COMPONENT_DIR})

INSTALL(FILES ${IBUS_UNIKEY_ICONS_FILES}
  DESTINATION ${PKGDATADIR}/icons)

GETTEXT_PROCESS_PO_FILES(vi ALL PO_FILES ${IBUS_UNIKEY_PO_FILES})

INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/vi.gmo"
  DESTINATION "${LOCALEDIR}/vi/LC_MESSAGES"
  RENAME "${PACKAGE_NAME}.mo")

ADD_SUBDIRECTORY(po)
ADD_SUBDIRECTORY(src/third_party/libunikey)